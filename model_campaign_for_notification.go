/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// CampaignForNotification
type CampaignForNotification struct {
	// Unique ID for this entity.
	Id int32 `json:"id"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The ID of the application that owns this entity.
	ApplicationId int32 `json:"applicationId"`
	// The ID of the user associated with this entity.
	UserId int32 `json:"userId"`
	// A user-facing name for this campaign.
	Name string `json:"name"`
	// A detailed description of the campaign.
	Description string `json:"description"`
	// Timestamp when the campaign will become active.
	StartTime *time.Time `json:"startTime,omitempty"`
	// Timestamp when the campaign will become inactive.
	EndTime *time.Time `json:"endTime,omitempty"`
	// Arbitrary properties associated with this campaign.
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
	// A disabled or archived campaign is not evaluated for rules or coupons.
	State string `json:"state"`
	// [ID of Ruleset](https://docs.talon.one/management-api#operation/getRulesets) this campaign applies on customer session evaluation.
	ActiveRulesetId *int32 `json:"activeRulesetId,omitempty"`
	// A list of tags for the campaign.
	Tags []string `json:"tags"`
	// The features enabled in this campaign.
	Features         []string               `json:"features"`
	CouponSettings   *CodeGeneratorSettings `json:"couponSettings,omitempty"`
	ReferralSettings *CodeGeneratorSettings `json:"referralSettings,omitempty"`
	// The set of [budget limits](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets) for this campaign.
	Limits []LimitConfig `json:"limits"`
	// The IDs of the [campaign groups](https://docs.talon.one/docs/product/account/managing-campaign-groups) this campaign belongs to.
	CampaignGroups *[]int32 `json:"campaignGroups,omitempty"`
	// A list of store IDs that are linked to the campaign.  **Note:** Campaigns with linked store IDs will only be evaluated when there is a [customer session update](https://docs.talon.one/integration-api#tag/Customer-sessions/operation/updateCustomerSessionV2) that references a linked store.
	LinkedStoreIds *[]int32 `json:"linkedStoreIds,omitempty"`
	// Number of coupons redeemed in the campaign.
	CouponRedemptionCount *int32 `json:"couponRedemptionCount,omitempty"`
	// Number of referral codes redeemed in the campaign.
	ReferralRedemptionCount *int32 `json:"referralRedemptionCount,omitempty"`
	// Total amount of discounts redeemed in the campaign.
	DiscountCount *float32 `json:"discountCount,omitempty"`
	// Total number of times discounts were redeemed in this campaign.
	DiscountEffectCount *int32 `json:"discountEffectCount,omitempty"`
	// Total number of coupons created by rules in this campaign.
	CouponCreationCount *int32 `json:"couponCreationCount,omitempty"`
	// Total number of custom effects triggered by rules in this campaign.
	CustomEffectCount *int32 `json:"customEffectCount,omitempty"`
	// Total number of referrals created by rules in this campaign.
	ReferralCreationCount *int32 `json:"referralCreationCount,omitempty"`
	// Total number of times the [add free item effect](https://docs.talon.one/docs/dev/integration-api/api-effects#addfreeitem) can be triggered in this campaign.
	AddFreeItemEffectCount *int32 `json:"addFreeItemEffectCount,omitempty"`
	// Total number of giveaways awarded by rules in this campaign.
	AwardedGiveawaysCount *int32 `json:"awardedGiveawaysCount,omitempty"`
	// Total number of loyalty points created by rules in this campaign.
	CreatedLoyaltyPointsCount *float32 `json:"createdLoyaltyPointsCount,omitempty"`
	// Total number of loyalty point creation effects triggered by rules in this campaign.
	CreatedLoyaltyPointsEffectCount *int32 `json:"createdLoyaltyPointsEffectCount,omitempty"`
	// Total number of loyalty points redeemed by rules in this campaign.
	RedeemedLoyaltyPointsCount *float32 `json:"redeemedLoyaltyPointsCount,omitempty"`
	// Total number of loyalty point redemption effects triggered by rules in this campaign.
	RedeemedLoyaltyPointsEffectCount *int32 `json:"redeemedLoyaltyPointsEffectCount,omitempty"`
	// Total number of webhooks triggered by rules in this campaign.
	CallApiEffectCount *int32 `json:"callApiEffectCount,omitempty"`
	// Total number of reserve coupon effects triggered by rules in this campaign.
	ReservecouponEffectCount *int32 `json:"reservecouponEffectCount,omitempty"`
	// Timestamp of the most recent event received by this campaign.
	LastActivity *time.Time `json:"lastActivity,omitempty"`
	// The total number of effects created in this campaign in the past 7 days.
	WeeklyUsageCount *int32 `json:"weeklyUsageCount,omitempty"`
	// Timestamp of the most recent update to the campaign's property. Updates to external entities used in this campaign are **not** registered by this property, such as collection or coupon updates.
	Updated *time.Time `json:"updated,omitempty"`
	// Name of the user who created this campaign if available.
	CreatedBy *string `json:"createdBy,omitempty"`
	// Name of the user who last updated this campaign if available.
	UpdatedBy *string `json:"updatedBy,omitempty"`
	// The ID of the Campaign Template this Campaign was created from.
	TemplateId *int32 `json:"templateId,omitempty"`
}

// GetId returns the Id field value
func (o *CampaignForNotification) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *CampaignForNotification) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *CampaignForNotification) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *CampaignForNotification) SetCreated(v time.Time) {
	o.Created = v
}

// GetApplicationId returns the ApplicationId field value
func (o *CampaignForNotification) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// SetApplicationId sets field value
func (o *CampaignForNotification) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetUserId returns the UserId field value
func (o *CampaignForNotification) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// SetUserId sets field value
func (o *CampaignForNotification) SetUserId(v int32) {
	o.UserId = v
}

// GetName returns the Name field value
func (o *CampaignForNotification) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *CampaignForNotification) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *CampaignForNotification) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// SetDescription sets field value
func (o *CampaignForNotification) SetDescription(v string) {
	o.Description = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *CampaignForNotification) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetStartTimeOk() (time.Time, bool) {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *CampaignForNotification) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *CampaignForNotification) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *CampaignForNotification) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetEndTimeOk() (time.Time, bool) {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *CampaignForNotification) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *CampaignForNotification) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *CampaignForNotification) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *CampaignForNotification) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *CampaignForNotification) SetAttributes(v map[string]interface{}) {
	o.Attributes = &v
}

// GetState returns the State field value
func (o *CampaignForNotification) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// SetState sets field value
func (o *CampaignForNotification) SetState(v string) {
	o.State = v
}

// GetActiveRulesetId returns the ActiveRulesetId field value if set, zero value otherwise.
func (o *CampaignForNotification) GetActiveRulesetId() int32 {
	if o == nil || o.ActiveRulesetId == nil {
		var ret int32
		return ret
	}
	return *o.ActiveRulesetId
}

// GetActiveRulesetIdOk returns a tuple with the ActiveRulesetId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetActiveRulesetIdOk() (int32, bool) {
	if o == nil || o.ActiveRulesetId == nil {
		var ret int32
		return ret, false
	}
	return *o.ActiveRulesetId, true
}

// HasActiveRulesetId returns a boolean if a field has been set.
func (o *CampaignForNotification) HasActiveRulesetId() bool {
	if o != nil && o.ActiveRulesetId != nil {
		return true
	}

	return false
}

// SetActiveRulesetId gets a reference to the given int32 and assigns it to the ActiveRulesetId field.
func (o *CampaignForNotification) SetActiveRulesetId(v int32) {
	o.ActiveRulesetId = &v
}

// GetTags returns the Tags field value
func (o *CampaignForNotification) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// SetTags sets field value
func (o *CampaignForNotification) SetTags(v []string) {
	o.Tags = v
}

// GetFeatures returns the Features field value
func (o *CampaignForNotification) GetFeatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Features
}

// SetFeatures sets field value
func (o *CampaignForNotification) SetFeatures(v []string) {
	o.Features = v
}

// GetCouponSettings returns the CouponSettings field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCouponSettings() CodeGeneratorSettings {
	if o == nil || o.CouponSettings == nil {
		var ret CodeGeneratorSettings
		return ret
	}
	return *o.CouponSettings
}

// GetCouponSettingsOk returns a tuple with the CouponSettings field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCouponSettingsOk() (CodeGeneratorSettings, bool) {
	if o == nil || o.CouponSettings == nil {
		var ret CodeGeneratorSettings
		return ret, false
	}
	return *o.CouponSettings, true
}

// HasCouponSettings returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCouponSettings() bool {
	if o != nil && o.CouponSettings != nil {
		return true
	}

	return false
}

// SetCouponSettings gets a reference to the given CodeGeneratorSettings and assigns it to the CouponSettings field.
func (o *CampaignForNotification) SetCouponSettings(v CodeGeneratorSettings) {
	o.CouponSettings = &v
}

// GetReferralSettings returns the ReferralSettings field value if set, zero value otherwise.
func (o *CampaignForNotification) GetReferralSettings() CodeGeneratorSettings {
	if o == nil || o.ReferralSettings == nil {
		var ret CodeGeneratorSettings
		return ret
	}
	return *o.ReferralSettings
}

// GetReferralSettingsOk returns a tuple with the ReferralSettings field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetReferralSettingsOk() (CodeGeneratorSettings, bool) {
	if o == nil || o.ReferralSettings == nil {
		var ret CodeGeneratorSettings
		return ret, false
	}
	return *o.ReferralSettings, true
}

// HasReferralSettings returns a boolean if a field has been set.
func (o *CampaignForNotification) HasReferralSettings() bool {
	if o != nil && o.ReferralSettings != nil {
		return true
	}

	return false
}

// SetReferralSettings gets a reference to the given CodeGeneratorSettings and assigns it to the ReferralSettings field.
func (o *CampaignForNotification) SetReferralSettings(v CodeGeneratorSettings) {
	o.ReferralSettings = &v
}

// GetLimits returns the Limits field value
func (o *CampaignForNotification) GetLimits() []LimitConfig {
	if o == nil {
		var ret []LimitConfig
		return ret
	}

	return o.Limits
}

// SetLimits sets field value
func (o *CampaignForNotification) SetLimits(v []LimitConfig) {
	o.Limits = v
}

// GetCampaignGroups returns the CampaignGroups field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCampaignGroups() []int32 {
	if o == nil || o.CampaignGroups == nil {
		var ret []int32
		return ret
	}
	return *o.CampaignGroups
}

// GetCampaignGroupsOk returns a tuple with the CampaignGroups field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCampaignGroupsOk() ([]int32, bool) {
	if o == nil || o.CampaignGroups == nil {
		var ret []int32
		return ret, false
	}
	return *o.CampaignGroups, true
}

// HasCampaignGroups returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCampaignGroups() bool {
	if o != nil && o.CampaignGroups != nil {
		return true
	}

	return false
}

// SetCampaignGroups gets a reference to the given []int32 and assigns it to the CampaignGroups field.
func (o *CampaignForNotification) SetCampaignGroups(v []int32) {
	o.CampaignGroups = &v
}

// GetLinkedStoreIds returns the LinkedStoreIds field value if set, zero value otherwise.
func (o *CampaignForNotification) GetLinkedStoreIds() []int32 {
	if o == nil || o.LinkedStoreIds == nil {
		var ret []int32
		return ret
	}
	return *o.LinkedStoreIds
}

// GetLinkedStoreIdsOk returns a tuple with the LinkedStoreIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetLinkedStoreIdsOk() ([]int32, bool) {
	if o == nil || o.LinkedStoreIds == nil {
		var ret []int32
		return ret, false
	}
	return *o.LinkedStoreIds, true
}

// HasLinkedStoreIds returns a boolean if a field has been set.
func (o *CampaignForNotification) HasLinkedStoreIds() bool {
	if o != nil && o.LinkedStoreIds != nil {
		return true
	}

	return false
}

// SetLinkedStoreIds gets a reference to the given []int32 and assigns it to the LinkedStoreIds field.
func (o *CampaignForNotification) SetLinkedStoreIds(v []int32) {
	o.LinkedStoreIds = &v
}

// GetCouponRedemptionCount returns the CouponRedemptionCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCouponRedemptionCount() int32 {
	if o == nil || o.CouponRedemptionCount == nil {
		var ret int32
		return ret
	}
	return *o.CouponRedemptionCount
}

// GetCouponRedemptionCountOk returns a tuple with the CouponRedemptionCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCouponRedemptionCountOk() (int32, bool) {
	if o == nil || o.CouponRedemptionCount == nil {
		var ret int32
		return ret, false
	}
	return *o.CouponRedemptionCount, true
}

// HasCouponRedemptionCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCouponRedemptionCount() bool {
	if o != nil && o.CouponRedemptionCount != nil {
		return true
	}

	return false
}

// SetCouponRedemptionCount gets a reference to the given int32 and assigns it to the CouponRedemptionCount field.
func (o *CampaignForNotification) SetCouponRedemptionCount(v int32) {
	o.CouponRedemptionCount = &v
}

// GetReferralRedemptionCount returns the ReferralRedemptionCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetReferralRedemptionCount() int32 {
	if o == nil || o.ReferralRedemptionCount == nil {
		var ret int32
		return ret
	}
	return *o.ReferralRedemptionCount
}

// GetReferralRedemptionCountOk returns a tuple with the ReferralRedemptionCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetReferralRedemptionCountOk() (int32, bool) {
	if o == nil || o.ReferralRedemptionCount == nil {
		var ret int32
		return ret, false
	}
	return *o.ReferralRedemptionCount, true
}

// HasReferralRedemptionCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasReferralRedemptionCount() bool {
	if o != nil && o.ReferralRedemptionCount != nil {
		return true
	}

	return false
}

// SetReferralRedemptionCount gets a reference to the given int32 and assigns it to the ReferralRedemptionCount field.
func (o *CampaignForNotification) SetReferralRedemptionCount(v int32) {
	o.ReferralRedemptionCount = &v
}

// GetDiscountCount returns the DiscountCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetDiscountCount() float32 {
	if o == nil || o.DiscountCount == nil {
		var ret float32
		return ret
	}
	return *o.DiscountCount
}

// GetDiscountCountOk returns a tuple with the DiscountCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetDiscountCountOk() (float32, bool) {
	if o == nil || o.DiscountCount == nil {
		var ret float32
		return ret, false
	}
	return *o.DiscountCount, true
}

// HasDiscountCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasDiscountCount() bool {
	if o != nil && o.DiscountCount != nil {
		return true
	}

	return false
}

// SetDiscountCount gets a reference to the given float32 and assigns it to the DiscountCount field.
func (o *CampaignForNotification) SetDiscountCount(v float32) {
	o.DiscountCount = &v
}

// GetDiscountEffectCount returns the DiscountEffectCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetDiscountEffectCount() int32 {
	if o == nil || o.DiscountEffectCount == nil {
		var ret int32
		return ret
	}
	return *o.DiscountEffectCount
}

// GetDiscountEffectCountOk returns a tuple with the DiscountEffectCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetDiscountEffectCountOk() (int32, bool) {
	if o == nil || o.DiscountEffectCount == nil {
		var ret int32
		return ret, false
	}
	return *o.DiscountEffectCount, true
}

// HasDiscountEffectCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasDiscountEffectCount() bool {
	if o != nil && o.DiscountEffectCount != nil {
		return true
	}

	return false
}

// SetDiscountEffectCount gets a reference to the given int32 and assigns it to the DiscountEffectCount field.
func (o *CampaignForNotification) SetDiscountEffectCount(v int32) {
	o.DiscountEffectCount = &v
}

// GetCouponCreationCount returns the CouponCreationCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCouponCreationCount() int32 {
	if o == nil || o.CouponCreationCount == nil {
		var ret int32
		return ret
	}
	return *o.CouponCreationCount
}

// GetCouponCreationCountOk returns a tuple with the CouponCreationCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCouponCreationCountOk() (int32, bool) {
	if o == nil || o.CouponCreationCount == nil {
		var ret int32
		return ret, false
	}
	return *o.CouponCreationCount, true
}

// HasCouponCreationCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCouponCreationCount() bool {
	if o != nil && o.CouponCreationCount != nil {
		return true
	}

	return false
}

// SetCouponCreationCount gets a reference to the given int32 and assigns it to the CouponCreationCount field.
func (o *CampaignForNotification) SetCouponCreationCount(v int32) {
	o.CouponCreationCount = &v
}

// GetCustomEffectCount returns the CustomEffectCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCustomEffectCount() int32 {
	if o == nil || o.CustomEffectCount == nil {
		var ret int32
		return ret
	}
	return *o.CustomEffectCount
}

// GetCustomEffectCountOk returns a tuple with the CustomEffectCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCustomEffectCountOk() (int32, bool) {
	if o == nil || o.CustomEffectCount == nil {
		var ret int32
		return ret, false
	}
	return *o.CustomEffectCount, true
}

// HasCustomEffectCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCustomEffectCount() bool {
	if o != nil && o.CustomEffectCount != nil {
		return true
	}

	return false
}

// SetCustomEffectCount gets a reference to the given int32 and assigns it to the CustomEffectCount field.
func (o *CampaignForNotification) SetCustomEffectCount(v int32) {
	o.CustomEffectCount = &v
}

// GetReferralCreationCount returns the ReferralCreationCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetReferralCreationCount() int32 {
	if o == nil || o.ReferralCreationCount == nil {
		var ret int32
		return ret
	}
	return *o.ReferralCreationCount
}

// GetReferralCreationCountOk returns a tuple with the ReferralCreationCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetReferralCreationCountOk() (int32, bool) {
	if o == nil || o.ReferralCreationCount == nil {
		var ret int32
		return ret, false
	}
	return *o.ReferralCreationCount, true
}

// HasReferralCreationCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasReferralCreationCount() bool {
	if o != nil && o.ReferralCreationCount != nil {
		return true
	}

	return false
}

// SetReferralCreationCount gets a reference to the given int32 and assigns it to the ReferralCreationCount field.
func (o *CampaignForNotification) SetReferralCreationCount(v int32) {
	o.ReferralCreationCount = &v
}

// GetAddFreeItemEffectCount returns the AddFreeItemEffectCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetAddFreeItemEffectCount() int32 {
	if o == nil || o.AddFreeItemEffectCount == nil {
		var ret int32
		return ret
	}
	return *o.AddFreeItemEffectCount
}

// GetAddFreeItemEffectCountOk returns a tuple with the AddFreeItemEffectCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetAddFreeItemEffectCountOk() (int32, bool) {
	if o == nil || o.AddFreeItemEffectCount == nil {
		var ret int32
		return ret, false
	}
	return *o.AddFreeItemEffectCount, true
}

// HasAddFreeItemEffectCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasAddFreeItemEffectCount() bool {
	if o != nil && o.AddFreeItemEffectCount != nil {
		return true
	}

	return false
}

// SetAddFreeItemEffectCount gets a reference to the given int32 and assigns it to the AddFreeItemEffectCount field.
func (o *CampaignForNotification) SetAddFreeItemEffectCount(v int32) {
	o.AddFreeItemEffectCount = &v
}

// GetAwardedGiveawaysCount returns the AwardedGiveawaysCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetAwardedGiveawaysCount() int32 {
	if o == nil || o.AwardedGiveawaysCount == nil {
		var ret int32
		return ret
	}
	return *o.AwardedGiveawaysCount
}

// GetAwardedGiveawaysCountOk returns a tuple with the AwardedGiveawaysCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetAwardedGiveawaysCountOk() (int32, bool) {
	if o == nil || o.AwardedGiveawaysCount == nil {
		var ret int32
		return ret, false
	}
	return *o.AwardedGiveawaysCount, true
}

// HasAwardedGiveawaysCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasAwardedGiveawaysCount() bool {
	if o != nil && o.AwardedGiveawaysCount != nil {
		return true
	}

	return false
}

// SetAwardedGiveawaysCount gets a reference to the given int32 and assigns it to the AwardedGiveawaysCount field.
func (o *CampaignForNotification) SetAwardedGiveawaysCount(v int32) {
	o.AwardedGiveawaysCount = &v
}

// GetCreatedLoyaltyPointsCount returns the CreatedLoyaltyPointsCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCreatedLoyaltyPointsCount() float32 {
	if o == nil || o.CreatedLoyaltyPointsCount == nil {
		var ret float32
		return ret
	}
	return *o.CreatedLoyaltyPointsCount
}

// GetCreatedLoyaltyPointsCountOk returns a tuple with the CreatedLoyaltyPointsCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCreatedLoyaltyPointsCountOk() (float32, bool) {
	if o == nil || o.CreatedLoyaltyPointsCount == nil {
		var ret float32
		return ret, false
	}
	return *o.CreatedLoyaltyPointsCount, true
}

// HasCreatedLoyaltyPointsCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCreatedLoyaltyPointsCount() bool {
	if o != nil && o.CreatedLoyaltyPointsCount != nil {
		return true
	}

	return false
}

// SetCreatedLoyaltyPointsCount gets a reference to the given float32 and assigns it to the CreatedLoyaltyPointsCount field.
func (o *CampaignForNotification) SetCreatedLoyaltyPointsCount(v float32) {
	o.CreatedLoyaltyPointsCount = &v
}

// GetCreatedLoyaltyPointsEffectCount returns the CreatedLoyaltyPointsEffectCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCreatedLoyaltyPointsEffectCount() int32 {
	if o == nil || o.CreatedLoyaltyPointsEffectCount == nil {
		var ret int32
		return ret
	}
	return *o.CreatedLoyaltyPointsEffectCount
}

// GetCreatedLoyaltyPointsEffectCountOk returns a tuple with the CreatedLoyaltyPointsEffectCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCreatedLoyaltyPointsEffectCountOk() (int32, bool) {
	if o == nil || o.CreatedLoyaltyPointsEffectCount == nil {
		var ret int32
		return ret, false
	}
	return *o.CreatedLoyaltyPointsEffectCount, true
}

// HasCreatedLoyaltyPointsEffectCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCreatedLoyaltyPointsEffectCount() bool {
	if o != nil && o.CreatedLoyaltyPointsEffectCount != nil {
		return true
	}

	return false
}

// SetCreatedLoyaltyPointsEffectCount gets a reference to the given int32 and assigns it to the CreatedLoyaltyPointsEffectCount field.
func (o *CampaignForNotification) SetCreatedLoyaltyPointsEffectCount(v int32) {
	o.CreatedLoyaltyPointsEffectCount = &v
}

// GetRedeemedLoyaltyPointsCount returns the RedeemedLoyaltyPointsCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetRedeemedLoyaltyPointsCount() float32 {
	if o == nil || o.RedeemedLoyaltyPointsCount == nil {
		var ret float32
		return ret
	}
	return *o.RedeemedLoyaltyPointsCount
}

// GetRedeemedLoyaltyPointsCountOk returns a tuple with the RedeemedLoyaltyPointsCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetRedeemedLoyaltyPointsCountOk() (float32, bool) {
	if o == nil || o.RedeemedLoyaltyPointsCount == nil {
		var ret float32
		return ret, false
	}
	return *o.RedeemedLoyaltyPointsCount, true
}

// HasRedeemedLoyaltyPointsCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasRedeemedLoyaltyPointsCount() bool {
	if o != nil && o.RedeemedLoyaltyPointsCount != nil {
		return true
	}

	return false
}

// SetRedeemedLoyaltyPointsCount gets a reference to the given float32 and assigns it to the RedeemedLoyaltyPointsCount field.
func (o *CampaignForNotification) SetRedeemedLoyaltyPointsCount(v float32) {
	o.RedeemedLoyaltyPointsCount = &v
}

// GetRedeemedLoyaltyPointsEffectCount returns the RedeemedLoyaltyPointsEffectCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetRedeemedLoyaltyPointsEffectCount() int32 {
	if o == nil || o.RedeemedLoyaltyPointsEffectCount == nil {
		var ret int32
		return ret
	}
	return *o.RedeemedLoyaltyPointsEffectCount
}

// GetRedeemedLoyaltyPointsEffectCountOk returns a tuple with the RedeemedLoyaltyPointsEffectCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetRedeemedLoyaltyPointsEffectCountOk() (int32, bool) {
	if o == nil || o.RedeemedLoyaltyPointsEffectCount == nil {
		var ret int32
		return ret, false
	}
	return *o.RedeemedLoyaltyPointsEffectCount, true
}

// HasRedeemedLoyaltyPointsEffectCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasRedeemedLoyaltyPointsEffectCount() bool {
	if o != nil && o.RedeemedLoyaltyPointsEffectCount != nil {
		return true
	}

	return false
}

// SetRedeemedLoyaltyPointsEffectCount gets a reference to the given int32 and assigns it to the RedeemedLoyaltyPointsEffectCount field.
func (o *CampaignForNotification) SetRedeemedLoyaltyPointsEffectCount(v int32) {
	o.RedeemedLoyaltyPointsEffectCount = &v
}

// GetCallApiEffectCount returns the CallApiEffectCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCallApiEffectCount() int32 {
	if o == nil || o.CallApiEffectCount == nil {
		var ret int32
		return ret
	}
	return *o.CallApiEffectCount
}

// GetCallApiEffectCountOk returns a tuple with the CallApiEffectCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCallApiEffectCountOk() (int32, bool) {
	if o == nil || o.CallApiEffectCount == nil {
		var ret int32
		return ret, false
	}
	return *o.CallApiEffectCount, true
}

// HasCallApiEffectCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCallApiEffectCount() bool {
	if o != nil && o.CallApiEffectCount != nil {
		return true
	}

	return false
}

// SetCallApiEffectCount gets a reference to the given int32 and assigns it to the CallApiEffectCount field.
func (o *CampaignForNotification) SetCallApiEffectCount(v int32) {
	o.CallApiEffectCount = &v
}

// GetReservecouponEffectCount returns the ReservecouponEffectCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetReservecouponEffectCount() int32 {
	if o == nil || o.ReservecouponEffectCount == nil {
		var ret int32
		return ret
	}
	return *o.ReservecouponEffectCount
}

// GetReservecouponEffectCountOk returns a tuple with the ReservecouponEffectCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetReservecouponEffectCountOk() (int32, bool) {
	if o == nil || o.ReservecouponEffectCount == nil {
		var ret int32
		return ret, false
	}
	return *o.ReservecouponEffectCount, true
}

// HasReservecouponEffectCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasReservecouponEffectCount() bool {
	if o != nil && o.ReservecouponEffectCount != nil {
		return true
	}

	return false
}

// SetReservecouponEffectCount gets a reference to the given int32 and assigns it to the ReservecouponEffectCount field.
func (o *CampaignForNotification) SetReservecouponEffectCount(v int32) {
	o.ReservecouponEffectCount = &v
}

// GetLastActivity returns the LastActivity field value if set, zero value otherwise.
func (o *CampaignForNotification) GetLastActivity() time.Time {
	if o == nil || o.LastActivity == nil {
		var ret time.Time
		return ret
	}
	return *o.LastActivity
}

// GetLastActivityOk returns a tuple with the LastActivity field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetLastActivityOk() (time.Time, bool) {
	if o == nil || o.LastActivity == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastActivity, true
}

// HasLastActivity returns a boolean if a field has been set.
func (o *CampaignForNotification) HasLastActivity() bool {
	if o != nil && o.LastActivity != nil {
		return true
	}

	return false
}

// SetLastActivity gets a reference to the given time.Time and assigns it to the LastActivity field.
func (o *CampaignForNotification) SetLastActivity(v time.Time) {
	o.LastActivity = &v
}

// GetWeeklyUsageCount returns the WeeklyUsageCount field value if set, zero value otherwise.
func (o *CampaignForNotification) GetWeeklyUsageCount() int32 {
	if o == nil || o.WeeklyUsageCount == nil {
		var ret int32
		return ret
	}
	return *o.WeeklyUsageCount
}

// GetWeeklyUsageCountOk returns a tuple with the WeeklyUsageCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetWeeklyUsageCountOk() (int32, bool) {
	if o == nil || o.WeeklyUsageCount == nil {
		var ret int32
		return ret, false
	}
	return *o.WeeklyUsageCount, true
}

// HasWeeklyUsageCount returns a boolean if a field has been set.
func (o *CampaignForNotification) HasWeeklyUsageCount() bool {
	if o != nil && o.WeeklyUsageCount != nil {
		return true
	}

	return false
}

// SetWeeklyUsageCount gets a reference to the given int32 and assigns it to the WeeklyUsageCount field.
func (o *CampaignForNotification) SetWeeklyUsageCount(v int32) {
	o.WeeklyUsageCount = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CampaignForNotification) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetUpdatedOk() (time.Time, bool) {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CampaignForNotification) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *CampaignForNotification) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *CampaignForNotification) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetCreatedByOk() (string, bool) {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret, false
	}
	return *o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *CampaignForNotification) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *CampaignForNotification) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *CampaignForNotification) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetUpdatedByOk() (string, bool) {
	if o == nil || o.UpdatedBy == nil {
		var ret string
		return ret, false
	}
	return *o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *CampaignForNotification) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *CampaignForNotification) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *CampaignForNotification) GetTemplateId() int32 {
	if o == nil || o.TemplateId == nil {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignForNotification) GetTemplateIdOk() (int32, bool) {
	if o == nil || o.TemplateId == nil {
		var ret int32
		return ret, false
	}
	return *o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *CampaignForNotification) HasTemplateId() bool {
	if o != nil && o.TemplateId != nil {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *CampaignForNotification) SetTemplateId(v int32) {
	o.TemplateId = &v
}

type NullableCampaignForNotification struct {
	Value        CampaignForNotification
	ExplicitNull bool
}

func (v NullableCampaignForNotification) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCampaignForNotification) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
